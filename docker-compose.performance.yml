version: '3.8'

x-resource-limits: &trading-resources
  deploy:
    resources:
      limits:
        memory: 2G
        cpus: '3.0'
      reservations:
        memory: 1.5G
        cpus: '2.0'

x-dashboard-resources: &dashboard-resources
  deploy:
    resources:
      limits:
        memory: 512M
        cpus: '1.0'
      reservations:
        memory: 256M
        cpus: '0.25'

services:
  # TRADING CORE - Maximum performance
  supreme-trading:
    build:
      context: .
      dockerfile: Dockerfile.trading
    <<: *trading-resources
    environment:
      - PRIORITY=trading
      - ENABLE_DASHBOARD=false
      - PYTHONPATH=/app
      - TRADING_MODE=production
    volumes:
      - trading_data:/app/data
      - /dev/shm:/dev/shm  # Shared memory for low-latency
    networks:
      - trading_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "from supreme_system_v5.core import health_check; health_check()"]
      interval: 30s
      timeout: 10s
      retries: 3
    cap_add:
      - IPC_LOCK  # Required for mlock()

  # DASHBOARD - Background service
  supreme-dashboard:
    build:
      context: .
      dockerfile: Dockerfile.dashboard
    <<: *dashboard-resources
    environment:
      - PRIORITY=dashboard
      - PYTHONPATH=/app
      - FLASK_ENV=production
    ports:
      - "5000:5000"
    depends_on:
      - supreme-trading
      - postgres-replica
    networks:
      - trading_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 60s
      timeout: 5s
      retries: 2

  # Database master (trading writes)
  postgres-master:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: trading_live
      POSTGRES_USER: trading_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_master_data:/var/lib/postgresql/data
      - ./sql/init_master.sql:/docker-entrypoint-initdb.d/init.sql
    command: >
      postgres
      -c shared_buffers=512MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=128MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
    networks:
      - trading_network

  # Database replica (dashboard reads)
  postgres-replica:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: trading_readonly
      POSTGRES_USER: dashboard_user
      POSTGRES_PASSWORD: ${DASHBOARD_PASSWORD}
      POSTGRES_MASTER_HOST: postgres-master
    volumes:
      - postgres_replica_data:/var/lib/postgresql/data
      - ./sql/init_replica.sql:/docker-entrypoint-initdb.d/init.sql
    depends_on:
      - postgres-master
    networks:
      - trading_network

networks:
  trading_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16

volumes:
  trading_data:
  postgres_master_data:
  postgres_replica_data:
