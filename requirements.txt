# Supreme System V5 - Production Requirements
# Optimized for i3-8th gen + 4GB RAM with real API integration

# === CORE FRAMEWORK (Required) ===
# Memory: ~50MB total
fastapi==0.104.1          # ~15MB - Web framework
uvicorn[standard]==0.24.0 # ~20MB - ASGI server
pydantic==2.5.0           # ~10MB - Data validation
pydantic-settings==2.1.0  # ~5MB - Settings management

# === REAL-TIME DATA APIS (Required) ===
# Memory: ~80MB total
aiohttp>=3.8.0            # ~30MB - Async HTTP client
websockets>=12.0          # ~15MB - WebSocket support
requests>=2.31.0          # ~10MB - HTTP library (fallback)
yfinance>=0.2.24          # ~15MB - Yahoo Finance API
ccxt>=4.1.64              # ~10MB - Cryptocurrency exchanges

# === CORE SCIENTIFIC (Required) ===
# Memory: ~300MB total (can be reduced for i3-4GB)
numpy>=1.24.0             # ~150MB - Numerical computing
pandas>=2.1.0             # ~100MB - Data manipulation
scipy>=1.11.0             # ~50MB - Scientific computing

# === ASYNC & NETWORKING (Required) ===
# Memory: ~25MB total
# uvloop>=0.18.0          # Not supported on Windows - using asyncio instead
# Note: On Windows, asyncio event loop is used instead of uvloop
aiofiles>=23.0.0          # ~10MB - Async file I/O
asyncio-throttle>=1.0.2   # ~15MB - Rate limiting

# === TECHNICAL ANALYSIS (Required) ===
# Memory: ~30MB total
# Use pure Python TA instead of TA-Lib to avoid binary installation issues
ta>=0.10.2                # ~15MB - Pure Python technical analysis
finta>=1.3                # ~15MB - Financial technical analysis

# === PERFORMANCE (Required) ===
# Memory: ~50MB total
numba>=0.58.0             # ~30MB - JIT compilation (CPU only)
psutil>=5.9.0             # ~20MB - System monitoring

# === DATA PROCESSING (Required) ===
# Memory: ~40MB total
pyarrow>=13.0.0           # ~40MB - Columnar data (smaller than polars)

# === MONITORING (Required) ===
# Memory: ~25MB total
prometheus-client>=0.17.0 # ~15MB - Metrics collection
aioredis>=2.0.0           # ~10MB - Redis async client

# === SECURITY (Required) ===
# Memory: ~60MB total
pyjwt>=2.8.0              # ~10MB - JWT tokens
passlib[bcrypt]>=1.7.4    # ~30MB - Password hashing
cryptography>=41.0.0      # ~20MB - Cryptographic functions

# === UTILITIES (Required) ===
# Memory: ~40MB total
python-dotenv>=1.0.0      # ~5MB - Environment variables
loguru>=0.7.2             # ~15MB - Better logging
rich>=13.7.0              # ~15MB - Console output
click>=8.1.7              # ~5MB - CLI interface
python-dateutil>=2.8.2    # ~5MB - Date utilities
pytz>=2023.3              # ~5MB - Timezone support

# === TESTING (Required) ===
# Memory: ~30MB total (development only)
pytest>=7.4.0             # ~20MB - Testing framework
pytest-asyncio>=0.21.0    # ~10MB - Async testing support

# === CODE QUALITY (Required) ===
# Memory: ~20MB total (development only)
black>=23.9.0             # ~10MB - Code formatter
flake8>=6.1.0             # ~10MB - Linter

# === PRODUCTION SERVER (Required) ===
# Memory: ~15MB total
gunicorn>=21.2.0          # ~15MB - Production WSGI server

# === AI/ML - LIGHTWEIGHT FOR i3-4GB ===
# These are automatically disabled on i3-4GB systems
# Install only if you have 8GB+ RAM

# scikit-learn>=1.3.0     # Uncomment for 8GB+ systems
# torch>=2.1.0            # Uncomment for 8GB+ systems (CPU only)
# transformers>=4.35.0    # Uncomment for 8GB+ systems

# === NEUROMORPHIC COMPUTING (Optional) ===
# Only install on systems with 8GB+ RAM
# brian2>=2.5.1           # Uncomment for neuromorphic computing
# nengo>=3.2.0            # Uncomment for neural engineering
# snntorch>=0.6.0         # Uncomment for spiking networks

# === QUANTUM COMPUTING (Optional) ===
# Only install if specifically needed and have 16GB+ RAM
# qiskit>=0.45.0          # Uncomment for quantum algorithms
# qiskit-aer>=0.12.0      # Uncomment for quantum simulation
# cirq>=1.2.0             # Uncomment for Google Cirq
# pennylane>=0.32.0       # Uncomment for differentiable quantum

# === ADVANCED DATA PROCESSING (Optional) ===
# Install only on higher-end systems
# polars>=0.19.0          # Uncomment for 8GB+ systems
# arrow>=13.0.0           # Uncomment if needed
# fastparquet>=0.8.3      # Uncomment if needed

# === ADVANCED MONITORING (Optional) ===
# grafana-client>=3.5.0   # Uncomment for Grafana integration
# memory-profiler>=0.60.0 # Uncomment for memory profiling
# py-spy>=0.3.14          # Uncomment for performance profiling

# === ADVANCED ANALYSIS (Optional) ===
# statsmodels>=0.14.0     # Uncomment for advanced statistics
# arch>=6.2.0             # Uncomment for GARCH models
# sktime>=0.24.0          # Uncomment for time series ML

# === VISUALIZATION (Optional) ===
# matplotlib>=3.8.0       # Uncomment if needed
# seaborn>=0.13.0         # Uncomment if needed
# plotly>=5.17.0          # Uncomment if needed
# bokeh>=3.3.0            # Uncomment if needed

# === DEVELOPMENT (Optional) ===
# jupyter>=1.0.0          # Uncomment for development
# ipython>=8.16.0         # Uncomment for development
# mypy>=1.5.0             # Uncomment for type checking

# === HARDWARE INTERFACE (Optional) ===
# pyserial>=3.5           # Uncomment if hardware interfaces needed
# pyftdi>=0.54.0          # Uncomment if FTDI devices needed

# === DOCUMENTATION (Optional) ===
# sphinx>=7.2.0           # Uncomment for documentation generation
# sphinx-rtd-theme>=1.3.0 # Uncomment for documentation

# === ALTERNATIVE BINARY DEPENDENCIES ===
# If you want to use TA-Lib instead of pure Python TA:
# 1. Install TA-Lib binary first:
#    - Ubuntu/Debian: sudo apt-get install libta-lib-dev
#    - macOS: brew install ta-lib  
#    - Windows: Download from https://www.lfd.uci.edu/~gohlke/pythonlibs/#ta-lib
# 2. Then uncomment:
# TA-Lib>=0.4.26

# === INSTALLATION NOTES ===
#
# INSTALLATION FOR i3-8th gen + 4GB RAM SYSTEMS:
# ================================================
# 1. Install Python 3.10+ (3.11 recommended for better performance)
# 2. Create virtual environment:
#    python -m venv venv
#    source venv/bin/activate  # Linux/Mac
#    venv\Scripts\activate     # Windows
# 3. Upgrade pip:
#    pip install --upgrade pip setuptools wheel
# 4. Install requirements (without cache to save space):
#    pip install -r requirements.txt --no-cache-dir
# 5. System will automatically detect hardware and disable heavy components
# 6. Verify installation:
#    python scripts/validate_system.py
#
# MEMORY OPTIMIZATION FOR i3-4GB:
# - Total package memory: ~700MB (installed)
# - Runtime memory usage: ~1.5-2.5GB (with optimizations)
# - System reserves: ~1GB for OS
# - Available for trading: ~500MB-1GB
#
# INSTALLATION FOR SYSTEMS WITH 8GB+ RAM:
# ==========================================
# 1. Follow steps 1-3 above
# 2. Uncomment desired optional packages above
# 3. Install normally:
#    pip install -r requirements.txt
# 4. Runtime memory usage: ~2-4GB (with optimizations)
#
# MEMORY USAGE ESTIMATES:
# =======================
# - Core packages only: ~700MB installed, ~1.5GB runtime
# - Core + basic ML: ~900MB installed, ~2.5GB runtime
# - Core + full AI: ~1.5GB installed, ~4-6GB runtime
# - Everything (all optional): ~3GB+ installed, ~8GB+ runtime
#
# PERFORMANCE TIPS FOR i3-4GB:
# ============================
# 1. Use SSD storage for better swap performance
# 2. Close unnecessary applications before running
# 3. Set Python environment variable: PYTHONDONTWRITEBYTECODE=1
# 4. Use --no-cache-dir for pip installs to save disk space
# 5. Monitor memory usage: python -m psutil or htop
# 6. System will automatically limit trading pairs and update frequency