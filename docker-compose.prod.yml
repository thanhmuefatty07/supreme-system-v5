# Supreme System V5 - Production Docker Compose Override
# Enhanced configuration for production deployment

version: '3.8'

services:
  # Production overrides for Supreme System V5
  supreme-system-v5:
    environment:
      - ENVIRONMENT=production
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - PROMETHEUS_PORT=9090
      - LOG_LEVEL=warning  # Reduced logging for production
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - API_KEY_ENCRYPTION_KEY=${API_KEY_ENCRYPTION_KEY}
      - DATABASE_URL=${DATABASE_URL:-sqlite:///app/data/supreme.db}
      - SENTRY_DSN=${SENTRY_DSN}  # Error tracking
      - METRICS_RETENTION_DAYS=30
    volumes:
      - /var/log/supreme-system-v5:/app/logs  # Production log directory
      - /opt/supreme-system-v5/data:/app/data  # Production data directory
      - /opt/supreme-system-v5/config:/app/config  # Production config
    deploy:
      replicas: 2  # High availability
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    networks:
      - supreme-network
      - monitoring-network
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.supreme-api.rule=Host(`api.supreme-system-v5.com`)"
      - "traefik.http.routers.supreme-api.tls=true"
      - "traefik.http.services.supreme-api.loadbalancer.server.port=8000"

  # Production Redis with authentication
  redis:
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD}
      --appendonly yes
      --maxmemory 1g
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
      --tcp-keepalive 60
      --timeout 300
    volumes:
      - /opt/supreme-system-v5/redis:/data  # Production Redis data
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    sysctls:
      - net.core.somaxconn=65535
    ulimits:
      memlock:
        soft: -1
        hard: -1

  # Production Prometheus with extended retention
  prometheus:
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=90d'  # Extended retention
      - '--storage.tsdb.retention.size=50GB'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--web.external-url=https://metrics.supreme-system-v5.com/'
      - '--log.level=warn'
    volumes:
      - ./monitoring/prometheus.prod.yml:/etc/prometheus/prometheus.yml:ro
      - /opt/supreme-system-v5/prometheus:/prometheus  # Production Prometheus data
      - /etc/ssl/certs:/etc/ssl/certs:ro  # SSL certificates
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    networks:
      - supreme-network
      - monitoring-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`metrics.supreme-system-v5.com`)"
      - "traefik.http.routers.prometheus.tls=true"

  # Production Grafana with LDAP/SSO
  grafana:
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_SECURITY_ADMIN_USER=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_SERVER_ROOT_URL=https://dashboard.supreme-system-v5.com/
      - GF_SERVER_SERVE_FROM_SUB_PATH=false
      - GF_DATABASE_TYPE=postgres
      - GF_DATABASE_HOST=postgres:5432
      - GF_DATABASE_NAME=${GRAFANA_DB_NAME:-grafana}
      - GF_DATABASE_USER=${GRAFANA_DB_USER:-grafana}
      - GF_DATABASE_PASSWORD=${GRAFANA_DB_PASSWORD}
      - GF_SESSION_PROVIDER=redis
      - GF_SESSION_PROVIDER_CONFIG=addr=redis:6379,password=${REDIS_PASSWORD},db=0
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel,grafana-clock-panel
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=${SMTP_HOST}
      - GF_SMTP_USER=${SMTP_USER}
      - GF_SMTP_PASSWORD=${SMTP_PASSWORD}
      - GF_SMTP_FROM_ADDRESS=${SMTP_FROM_ADDRESS}
    volumes:
      - /opt/supreme-system-v5/grafana:/var/lib/grafana  # Production Grafana data
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - ./monitoring/grafana/ldap.toml:/etc/grafana/ldap.toml:ro
      - /etc/ssl/certs:/etc/ssl/certs:ro
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    networks:
      - supreme-network
      - monitoring-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`dashboard.supreme-system-v5.com`)"
      - "traefik.http.routers.grafana.tls=true"

  # PostgreSQL for production data storage
  postgres:
    image: postgres:15.4-alpine
    container_name: supreme-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-supreme_system_v5}
      - POSTGRES_USER=${POSTGRES_USER:-supreme}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - /opt/supreme-system-v5/postgres:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: >
      postgres
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.7
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
    networks:
      - supreme-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-supreme}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx reverse proxy with SSL termination
  nginx:
    image: nginx:1.25-alpine
    container_name: supreme-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - /var/log/nginx:/var/log/nginx
    depends_on:
      - supreme-system-v5
      - grafana
      - prometheus
    networks:
      - supreme-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.2'

# Production volumes with backup configuration
volumes:
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/supreme-system-v5/redis
  prometheus_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/supreme-system-v5/prometheus
  grafana_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/supreme-system-v5/grafana
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/supreme-system-v5/postgres

# Production networks with external connectivity
networks:
  supreme-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
  monitoring-network:
    driver: bridge
    external: true  # Connect to external monitoring stack

# Required environment variables for production:
# JWT_SECRET_KEY=<secure-jwt-secret>
# API_KEY_ENCRYPTION_KEY=<secure-encryption-key>
# REDIS_PASSWORD=<secure-redis-password>
# POSTGRES_PASSWORD=<secure-postgres-password>
# GRAFANA_ADMIN_PASSWORD=<secure-grafana-password>
# GRAFANA_DB_PASSWORD=<secure-grafana-db-password>
# SENTRY_DSN=<sentry-dsn-for-error-tracking>
# SMTP_HOST=<smtp-server>
# SMTP_USER=<smtp-username>
# SMTP_PASSWORD=<smtp-password>
# SMTP_FROM_ADDRESS=<notification-email>