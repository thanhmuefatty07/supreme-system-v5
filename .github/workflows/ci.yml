name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  quality:
    name: Lint • Type • Security • Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        run: pip install uv

      - name: Cache uv
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/requirements.lock', '**/requirements.txt') }}

      - name: Install dependencies (prefer lockfile)
        run: |
          if [ -f requirements.lock ] && [ -s requirements.lock ]; then
            echo "Installing from lock"
            uv pip install -r requirements.lock
          else
            echo "Installing from requirements.txt"
            uv pip install -r requirements.txt
          fi
          pip install ruff black isort mypy bandit pytest pytest-cov

      - name: Lint (ruff)
        run: ruff check .

      - name: Format check (black)
        run: black --check .

      - name: Import order (isort)
        run: isort --check-only .

      - name: Type check (mypy minimal)
        run: mypy src/api src/monitoring || true

      - name: Security scan (bandit)
        run: bandit -r src -q || true

      - name: Run tests with coverage
        env:
          PYTHONPATH: ${{ github.workspace }}/src
        run: pytest -q --maxfail=1 --cov=src --cov-report=term-missing --cov-report=xml

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
