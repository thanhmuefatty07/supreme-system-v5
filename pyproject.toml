[build-system]
requires = ["hatchling>=1.13.0"]
build-backend = "hatchling.build"

[project]
name = "supreme-system-v5"
version = "5.0.0"
description = "World's First Neuromorphic Trading System - Production Grade AI Trading Platform"
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE"}
authors = [
    {name = "Supreme System V5 Team", email = "dev@supremesystemv5.ai"},
]
keywords = [
    "trading", "ai", "neuromorphic", "ultra-low-latency", 
    "quantitative-finance", "machine-learning", "real-time",
    "production", "i3-optimized", "hardware-adaptive"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

# Core dependencies for i3-8th gen + 4GB RAM optimized
dependencies = [
    # === CORE FRAMEWORK ===
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # === REAL-TIME DATA ===
    "aiohttp>=3.8.0",
    "websockets>=12.0",
    "requests>=2.31.0",
    "yfinance>=0.2.24",
    "ccxt>=4.1.64",
    
    # === CORE SCIENTIFIC ===
    "numpy>=1.24.0",
    "pandas>=2.1.0",
    "scipy>=1.11.0",
    
    # === ASYNC & PERFORMANCE ===
    "uvloop>=0.18.0",
    "aiofiles>=23.0.0",
    "asyncio-throttle>=1.0.2",
    "numba>=0.58.0",
    
    # === TECHNICAL ANALYSIS ===
    "ta>=0.10.2",          # Pure Python TA
    "finta>=1.3",          # Financial TA
    
    # === DATA & STORAGE ===
    "pyarrow>=13.0.0",
    "redis>=5.0.0",
    
    # === MONITORING ===
    "prometheus-client>=0.17.0",
    "psutil>=5.9.0",
    
    # === SECURITY ===
    "pyjwt>=2.8.0",
    "passlib[bcrypt]>=1.7.4",
    "cryptography>=41.0.0",
    
    # === UTILITIES ===
    "python-dotenv>=1.0.0",
    "loguru>=0.7.2",
    "rich>=13.7.0",
    "click>=8.1.7",
    "python-dateutil>=2.8.2",
    "pytz>=2023.3",
]

# Optional dependencies for higher-end systems
[project.optional-dependencies]
# AI/ML components (8GB+ RAM recommended)
ai = [
    "scikit-learn>=1.3.0",
    "torch>=2.1.0",           # CPU only for stability
    "transformers>=4.35.0",
]

# Neuromorphic computing (16GB+ RAM recommended)
neuromorphic = [
    "brian2>=2.5.1",
    "nengo>=3.2.0",
    "snntorch>=0.6.0",
]

# Quantum computing (32GB+ RAM recommended)
quantum = [
    "qiskit>=0.45.0",
    "qiskit-aer>=0.12.0",
    "cirq>=1.2.0",
    "pennylane>=0.32.0",
]

# Advanced data processing
data = [
    "polars>=0.19.0",
    "arrow>=13.0.0",
    "fastparquet>=0.8.3",
    "duckdb>=0.9.0",
]

# Visualization and analysis
viz = [
    "matplotlib>=3.8.0",
    "seaborn>=0.13.0",
    "plotly>=5.17.0",
    "bokeh>=3.3.0",
]

# Development tools
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-benchmark>=4.0.0",
    "pytest-cov>=4.1.0",
    "black>=23.9.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.5.0",
]

# Documentation
docs = [
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

# Production deployment
prod = [
    "gunicorn>=21.2.0",
    "grafana-client>=3.5.0",
    "memory-profiler>=0.60.0",
]

# Complete installation
all = [
    "supreme-system-v5[ai,data,viz,dev,docs,prod]"
]

[project.urls]
Homepage = "https://github.com/thanhmuefatty07/supreme-system-v5"
Repository = "https://github.com/thanhmuefatty07/supreme-system-v5"
Documentation = "https://github.com/thanhmuefatty07/supreme-system-v5/blob/main/docs/"
Changelog = "https://github.com/thanhmuefatty07/supreme-system-v5/blob/main/CHANGELOG.md"
"Bug Tracker" = "https://github.com/thanhmuefatty07/supreme-system-v5/issues"

[project.scripts]
# CLI entry points
supreme-v5 = "supreme_system_v5.cli:main"
supreme-trading = "supreme_system_v5.trading.cli:trading_cli"
supreme-backtest = "supreme_system_v5.backtesting.cli:backtest_cli"
supreme-validate = "supreme_system_v5.validation:validate_system"

[tool.hatch.version]
path = "src/supreme_system_v5/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests",
    "/docs",
    "/scripts",
    "README.md",
    "CHANGELOG.md",
    "pyproject.toml",
]

[tool.hatch.build.targets.wheel]
packages = ["src/supreme_system_v5"]

# === TOOL CONFIGURATIONS ===

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.ruff]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
line-length = 88
target-version = "py39"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**" = ["S101"]  # assert allowed in tests

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "yfinance.*",
    "ccxt.*",
    "ta.*",
    "finta.*",
    "brian2.*",
    "nengo.*",
    "qiskit.*",
    "numba.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m "not slow"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "hardware: marks tests that require specific hardware",
    "real_data: marks tests that require real market data APIs",
]

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
    "*/setup.py",
]

[tool.coverage.report]
show_missing = true
skip_covered = false
fail_under = 80
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.bandit]
skips = ["B101", "B601"]

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true