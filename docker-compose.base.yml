# Supreme System V5 - Docker Base Configuration
# ULTRA SFL - Single source of truth for all environments
# Contains shared infrastructure and common services

version: '3.8'

# ================================
# COMMON VARIABLES & CONFIG
# ================================
x-common-variables: &common-variables
  PYTHONPATH: /app
  TZ: UTC
  LOG_LEVEL: ${LOG_LEVEL:-INFO}

x-logging: &default-logging
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"

x-restart-policy: &restart-policy
  restart: unless-stopped

# ================================
# SHARED INFRASTRUCTURE
# ================================
services:
  # Redis - High-speed caching and session storage
  redis:
    image: redis:7.2-alpine
    container_name: supreme-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - supreme-network
    <<: *restart-policy
    <<: *default-logging
    environment:
      <<: *common-variables
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # PostgreSQL - Trade history and quality metrics storage
  postgres:
    image: postgres:15-alpine
    container_name: supreme-postgres
    environment:
      <<: *common-variables
      POSTGRES_DB: supreme_trading
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - supreme-network
    <<: *restart-policy
    <<: *default-logging
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d supreme_trading"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Prometheus - Metrics collection and monitoring
  prometheus:
    image: prom/prometheus:v2.47.2
    container_name: supreme-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - supreme-network
    <<: *restart-policy
    <<: *default-logging
    environment:
      <<: *common-variables
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Grafana - Dashboard and visualization
  grafana:
    image: grafana/grafana:10.2.0
    container_name: supreme-grafana
    environment:
      <<: *common-variables
      GF_SECURITY_ADMIN_PASSWORD_FILE: /run/secrets/grafana_password
      GF_SECURITY_ADMIN_USER: admin
      GF_USERS_ALLOW_SIGN_UP: false
      GF_ANALYTICS_REPORTING_ENABLED: false
      GF_SECURITY_DISABLE_GRAVATAR: true
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - supreme-network
    <<: *restart-policy
    <<: *default-logging
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.3'
        reservations:
          memory: 256M
          cpus: '0.15'

# ================================
# VOLUMES
# ================================
volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

# ================================
# SECRETS
# ================================
secrets:
  postgres_password:
    file: ./secrets/postgres_password.txt
  grafana_password:
    file: ./secrets/grafana_password.txt

# ================================
# NETWORKS
# ================================
networks:
  supreme-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
